import numpy as npimport ezdxffrom ezdxf.addons import Importerfrom shapely.geometry import Polygon# returns a rectangle from opposite corners coordinates as a lwpolylinedef draw_rectangle_corner_dimensions(corner0, x_size, y_size):    points =    (corner0,                (corner0[0]+x_size, corner0[1]),                (corner0[0]+x_size, corner0[1]+y_size),                (corner0[0], corner0[1]+y_size))    return Polygon(points)# adds a rectangle from the center coordinates and dimensions as a lwpolylinedef draw_rectangle_center_dimensions(center, x_size, y_size):    points =   ((center[0]-0.5*x_size, center[1]-0.5*y_size),                (center[0]+0.5*x_size, center[1]-0.5*y_size),                (center[0]+0.5*x_size, center[1]+0.5*y_size),                (center[0]-0.5*x_size, center[1]+0.5*y_size))    return Polygon(points)def AddFeedlineSegment(pixel, fl_width, separation, fl_length=None):        x_offset = pixel.capacitor_finger_width*np.ceil(pixel.capacitor_finger_number) + pixel.capacitor_finger_gap*np.ceil(pixel.capacitor_finger_number-1.0) + pixel.absorber_separation + 0.5*pixel.vertical_size    y0 = 0.5*pixel.vertical_size + pixel.coupling_capacitor_y_offset + pixel.coupling_capacitor_width + separation    if fl_length == None:        fl_length = x_offset+0.5*pixel.vertical_size + 0.2*pixel.vertical_size            x0 = -x_offset -0.1*pixel.vertical_size        points = ((x0, y0),               (x0+fl_length, y0),               (x0+fl_length, y0+fl_width),              (x0, y0+fl_width))    pixel.msp.add_lwpolyline(points, close=True, dxfattribs={"layer": 'FEEDLINE'})